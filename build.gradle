plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

tasks.build.dependsOn('shadowJar')

group = 'imlukas'
version = '1.6.1'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://jitpack.io/'
    }
    maven {
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        url = 'https://libraries.minecraft.net/'
    }
}

dependencies {


    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'

    compileOnly(group: 'com.github.Realizedd', name: 'TokenManager', version: '3.2.4') {
        transitive = false
    }
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor('org.projectlombok:lombok:1.18.24')

    compileOnly 'com.mojang:authlib:1.5.21'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.10.0'
    compileOnly fileTree(dir: "libs", include: ["*.jar"])
    compileOnly 'com.github.Archy-X:AureliumSkills:Beta1.3.10'
}

shadowJar {
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    minimize()
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
